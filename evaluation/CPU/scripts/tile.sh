#!/bin/bash

# Finds optimal size of tile with optimal number of threads.

source utils.sh

NUM_THREADS=$1

if [ -z "$1" ]
then
	echo "Usage: ./tile.sh NUM_THREADS"
	exit 1
fi
	
RESOLUTIONS=()

RESULTS=()

RES_OUT=TILES.out

echo "tile-size	cdf53-sep-lift-gen	cdf53-nsp-lift-gen	cdf53-nsp-conv-at-gen	cdf53-nsp-conv-star-gen	cdf97-sep-lift-gen	cdf97-nsp-lift-gen	cdf97-nsp-conv-at-gen	cdf97-nsp-conv-star-gen	cdf97-nsp-poly-gen	dd137-sep-lift-gen	dd137-nsp-lift-gen	dd137-nsp-conv-at-gen	dd137-nsp-conv-star-gen	cdf53-sep-lift-sse	cdf53-nsp-lift-sse	cdf53-nsp-conv-at-sse	cdf53-nsp-conv-star-sse	cdf97-sep-lift-sse	cdf97-nsp-lift-sse	cdf97-nsp-conv-at-sse	cdf97-nsp-conv-star-sse	cdf97-nsp-poly-sse	dd137-sep-lift-sse	dd137-nsp-lift-sse	dd137-nsp-conv-at-sse	dd137-nsp-conv-star-sse" | tee $RES_OUT

#SIZES="128 184 256 368 512 728 1024 1448 2048 2896 4096 5792 8192 11584 16384"
SIZES="128 192 256 384 512 736 1024 1472 2048 2912 4096 5792 8192 11584 16384"
#SIZES="256 512 768 1024 1280 1536 1792 2048 2304 2560 2816 3072 3328 3584 3840 4096 4352 4608 4864 5120 5376 5632 5888 6144 6400 6656 6912 7168 7424 7680 7936 8192"
#8448 8704 8960 9216 9472 9728 9984 10240 10496 10752 11008 11264 11520 11776 12032 12288 12544 12800 13056 13312 13568 13824 14080"

#256 512 768 1024 1280 1536 1792 2048 2304 2560 2816 3072 3328 3584 3840 4096 4352 4608 4864 5120 5376 5632 5888 6144 6400 6656 6912 7168 7424 7680 7936 8192 8448 8704 8960 9216 9472 9728 9984 10240 10496 10752 11008 11264 11520 11776 12032 12288 12544 12800 13056 13312 13568 13824 14080 14336 14592 14848 15104 15360 15616 15872 16128 16384 16640 16896 17152 17408 17664 17920 18176 18432 18688 18944 19200 19456 19712 19968 20224 20480 20736 20992 21248 21504 21760 22016 22272 22528 22784 23040 23296 23552 23808 24064 24320 24576 24832 25088 25344 25600 25856 26112 26368 26624 26880 27136 27392 27648 27904 28160 28416 28672 28928 29184 29440 29696 29952 30208 30464 30720 30976 31232 31488 31744 32000 32256 32512 32768


I=0
for TILE_SIZE in $SIZES 
do
	if (( TILE_SIZE/2 < NUM_THREADS ))
	then
		continue
	fi

	RESOLUTIONS[$I]=$TILE_SIZE

	echo -n "$TILE_SIZE"

	TMP=$(run_test $NUM_THREADS $TILE_SIZE $TILE_SIZE)
	echo "	$TMP"
	RESULTS[$I]=$TMP
	
	I=$(( I+1 ))
done

LEN=$I

for ((  I=0; I < LEN; I+=1 ))
do
	echo "${RESOLUTIONS[$I]}	${RESULTS[$I]}" >> $RES_OUT
done

exit 0
